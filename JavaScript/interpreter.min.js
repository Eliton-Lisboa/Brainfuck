
module.exports = function bfinterpreter(_code) {
	const memory = [0]
	const loops = []
	let pointer = 0
	let result = ''

	for (let x = 0; x < _code.length; x++)
		do {
			const char = _code[x]

			if (char === '+') memory[pointer] = memory[pointer] === 255 ? 0 : memory[pointer] + 1
			else if (char === '-') memory[pointer] = (memory[pointer] === 0) ? 255 : memory[pointer] - 1
			else if (char === '>') pointer++; if (pointer >= memory.length) memory.push(0)
			else if (char === '<') pointer--; if (pointer === -1) throw '[Error] pointer cannot be less than 1'
			else if (char === '.') result += String.fromCharCode( memory[pointer] )
			else if (char === ',') memory[pointer] = prompt('enter a char:').charCodeAt(0)
			else if (char === '!') return { memory, pointer, result, loops }
			else if (char === '[') loops.unshift(x)
			else if (char === ']') memory[pointer] === 0 ? loops.shift() : x = loops[0]
		}
    while (loops.length > 0 && x++)

	return { memory, pointer, result, loops }
}
